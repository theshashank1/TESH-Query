name: TESH-Query

on:
  push:
    tags:
      # This regex ensures the workflow runs on version tags like v1.2.3, v1.2.3-alpha.1, etc.
      - ^v\d+\.\d+\.\d+(?:-[\w.]+)?(?:+\w+)?$

  workflow_dispatch: # Allows for manual triggering of the workflow

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for secure, passwordless publishing to PyPI using OIDC

    environment:
      name: pypi
      url: https://pypi.org/p/teshq # Links the run to your PyPI project page

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags so hatch-vcs can determine the project version
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Hatch and versioning plugin
        # hatch-vcs is needed to read the version from your git tags
        run: pip install hatch hatch-vcs

      - name: Run all quality checks
        # This single command runs style checks, linter, and tests as defined
        # in your pyproject.toml under [tool.hatch.envs.default.scripts]
        run: hatch run all-checks

      - name: Build package
        # Hatch handles building both the sdist and wheel based on your config
        run: hatch build

      - name: Publish to PyPI
        # Hatch has built-in support for publishing with OIDC (trusted publishing)
        # It automatically uses the permissions granted to the job
        run: hatch publish
