name: Publish TESH Query to PyPI

on:
  push:
    tags:
      - "v*" # Only runs on version tags like v1.2.3

# Limit concurrency to one workflow per ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for PyPI trusted publishing
      contents: write # Required to create a GitHub Release

    environment:
      name: pypi
      url: https://pypi.org/p/teshq # Will link to the published package

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history needed for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel twine setuptools_scm
          # Install dev dependencies if they exist
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Install the package in development mode
          pip install -e .

      - name: Verify version detection
        run: |
          echo "Current tag: ${GITHUB_REF#refs/tags/}"
          python -c "from setuptools_scm import get_version; print(f'Detected version: {get_version()}')" || echo "setuptools_scm version detection failed"

      - name: Run tests
        run: |
          if command -v pytest &>/dev/null; then
            pytest
          else
            echo "No pytest found, skipping tests"
          fi

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Test installation
        run: |
          python -m venv test_env
          source test_env/bin/activate
          pip install dist/*.whl
          # Try importing the package - adjust the import name if needed
          python -c "import teshq; print('Import successful')" || echo "Import test failed"
          deactivate

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
